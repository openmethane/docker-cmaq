C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08
C
C  Differentiation of matrix in reverse (adjoint) mode:
C   gradient     of useful results: x
C   with respect to varying inputs: d x
C   RW status of diff variables: d:out x:in-out
C
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************
C
C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /Volumes/Data/CVS/CMAQ_CVSrepos/CCTM/src/vdiff/acm2_inline_adj_bwd/matrix_bwd.F,v 1.1 2011/02/22 01:10:45 ppercell Exp $
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
      SUBROUTINE MATRIX_BWD(a, b, c, e, db, xb)

C Revision History:
C   Oct 2010 by Peter Percell at UH-IMAQS: created for adjoint/4dvar

      USE VGRD_DEFN           ! vertical layer specifications

      IMPLICIT NONE
C
C Includes:
C
      INCLUDE SUBST_GC_DIFF   ! gas chem diffusion species and map table
      INCLUDE SUBST_AE_DIFF   ! aerosol diffusion species and map table
      INCLUDE SUBST_NR_DIFF   ! non-react diffusion species and map table
      INCLUDE SUBST_TR_DIFF   ! tracer diffusion species and map table

      INTEGER     N_SPC_DIFF               ! global diffusion species
      PARAMETER ( N_SPC_DIFF = N_GC_DIFF   ! = N_GC_SPC + 1
     &                       + N_AE_DIFF
     &                       + N_NR_DIFF
     &                       + N_TR_DIFF)
C
C...Arguments
C
C     INTEGER, INTENT(IN)   :: KL
C     INTEGER, INTENT(IN)   :: NSP
      REAL a(nlays)
      REAL b(nlays)
      REAL c(nlays)
      REAL e(nlays)
      REAL db(n_spc_diff, nlays)
      REAL xb(n_spc_diff, nlays)
C
C...Locals
C
      REAL y(n_spc_diff, nlays)
      REAL yb(n_spc_diff, nlays)
      REAL l(nlays, nlays)
      REAL u(nlays)
      REAL up1(nlays)
      REAL ru(nlays)
      REAL dd, dd1, ysum
      REAL ysumb
      INTEGER i, j, v
      INTEGER ad_to
      INTEGER ii2
      INTEGER ii1
C
C-- Define Upper and Lower matrices
C
      l(1, 1) = 1.0
      ru(1) = 1.0/b(1)
C
      DO i=2,nlays
        l(i, i) = 1.0
        l(i, 1) = a(i)/b(1)
        up1(i-1) = e(i-1)
      ENDDO
C
      DO i=3,nlays
        DO j=2,i-2
          dd = b(j) - l(j, j-1)*e(j-1)
          l(i, j) = -(l(i, j-1)*e(j-1)/dd)
        ENDDO
        j = i - 1
        dd = b(j) - l(j, j-1)*e(j-1)
        l(i, j) = (c(i)-l(i, j-1)*e(j-1))/dd
      ENDDO
C
      DO i=2,nlays
        u(i) = b(i) - l(i, i-1)*e(i-1)
        ru(i) = 1.0/u(i)
      ENDDO
C
C-- Forward sub for Ly=d
C
      DO v=1,n_spc_diff
        DO i=2,nlays
          j = i
          CALL PUSHINTEGER4(j - 1)
        ENDDO
      ENDDO
C
      DO i=nlays-1,1,-1
        CALL PUSHREAL4(dd)
        dd = ru(i)
        CALL PUSHREAL4(dd1)
        dd1 = up1(i)
      ENDDO
      DO ii1=1,nlays
        DO ii2=1,n_spc_diff
          yb(ii2, ii1) = 0.0
        ENDDO
      ENDDO
      DO i=1,nlays-1,1
        DO v=n_spc_diff,1,-1
          yb(v, i) = yb(v, i) + dd*xb(v, i)
          xb(v, i+1) = xb(v, i+1) - dd*dd1*xb(v, i)
          xb(v, i) = 0.0
        ENDDO
        CALL POPREAL4(dd1)
        CALL POPREAL4(dd)
      ENDDO
      DO v=n_spc_diff,1,-1
        yb(v, nlays) = yb(v, nlays) + ru(nlays)*xb(v, nlays)
        xb(v, nlays) = 0.0
      ENDDO
      DO ii1=1,nlays
        DO ii2=1,n_spc_diff
          db(ii2, ii1) = 0.0
        ENDDO
      ENDDO
      DO v=n_spc_diff,1,-1
        DO i=nlays,2,-1
          ysumb = yb(v, i)
          yb(v, i) = 0.0
          CALL POPINTEGER4(ad_to)
          DO j=ad_to,1,-1
            yb(v, j) = yb(v, j) - l(i, j)*ysumb
          ENDDO
          db(v, i) = db(v, i) + ysumb
        ENDDO
        db(v, 1) = db(v, 1) + yb(v, 1)
        yb(v, 1) = 0.0
      ENDDO
      END
